/**************************************************/
/*  Invictus 2021                                 */
/*  Edsel Apostol                                 */
/*  ed_apostol@yahoo.com                          */
/**************************************************/

#pragma once

const uint64_t DiagonalMask[64] = {
    0x8040201008040201ULL, 0x0080402010080402ULL, 0x0000804020100804ULL, 0x0000008040201008ULL,
    0x0000000080402010ULL, 0x0000000000804020ULL, 0x0000000000008040ULL, 0x0000000000000080ULL,
    0x4020100804020100ULL, 0x8040201008040201ULL, 0x0080402010080402ULL, 0x0000804020100804ULL,
    0x0000008040201008ULL, 0x0000000080402010ULL, 0x0000000000804020ULL, 0x0000000000008040ULL,
    0x2010080402010000ULL, 0x4020100804020100ULL, 0x8040201008040201ULL, 0x0080402010080402ULL,
    0x0000804020100804ULL, 0x0000008040201008ULL, 0x0000000080402010ULL, 0x0000000000804020ULL,
    0x1008040201000000ULL, 0x2010080402010000ULL, 0x4020100804020100ULL, 0x8040201008040201ULL,
    0x0080402010080402ULL, 0x0000804020100804ULL, 0x0000008040201008ULL, 0x0000000080402010ULL,
    0x0804020100000000ULL, 0x1008040201000000ULL, 0x2010080402010000ULL, 0x4020100804020100ULL,
    0x8040201008040201ULL, 0x0080402010080402ULL, 0x0000804020100804ULL, 0x0000008040201008ULL,
    0x0402010000000000ULL, 0x0804020100000000ULL, 0x1008040201000000ULL, 0x2010080402010000ULL,
    0x4020100804020100ULL, 0x8040201008040201ULL, 0x0080402010080402ULL, 0x0000804020100804ULL,
    0x0201000000000000ULL, 0x0402010000000000ULL, 0x0804020100000000ULL, 0x1008040201000000ULL,
    0x2010080402010000ULL, 0x4020100804020100ULL, 0x8040201008040201ULL, 0x0080402010080402ULL,
    0x0100000000000000ULL, 0x0201000000000000ULL, 0x0402010000000000ULL, 0x0804020100000000ULL,
    0x1008040201000000ULL, 0x2010080402010000ULL, 0x4020100804020100ULL, 0x8040201008040201ULL
};

const uint64_t AntiDiagMask[64] = {
    0x0000000000000001ULL, 0x0000000000000102ULL, 0x0000000000010204ULL, 0x0000000001020408ULL,
    0x0000000102040810ULL, 0x0000010204081020ULL, 0x0001020408102040ULL, 0x0102040810204080ULL,
    0x0000000000000102ULL, 0x0000000000010204ULL, 0x0000000001020408ULL, 0x0000000102040810ULL,
    0x0000010204081020ULL, 0x0001020408102040ULL, 0x0102040810204080ULL, 0x0204081020408000ULL,
    0x0000000000010204ULL, 0x0000000001020408ULL, 0x0000000102040810ULL, 0x0000010204081020ULL,
    0x0001020408102040ULL, 0x0102040810204080ULL, 0x0204081020408000ULL, 0x0408102040800000ULL,
    0x0000000001020408ULL, 0x0000000102040810ULL, 0x0000010204081020ULL, 0x0001020408102040ULL,
    0x0102040810204080ULL, 0x0204081020408000ULL, 0x0408102040800000ULL, 0x0810204080000000ULL,
    0x0000000102040810ULL, 0x0000010204081020ULL, 0x0001020408102040ULL, 0x0102040810204080ULL,
    0x0204081020408000ULL, 0x0408102040800000ULL, 0x0810204080000000ULL, 0x1020408000000000ULL,
    0x0000010204081020ULL, 0x0001020408102040ULL, 0x0102040810204080ULL, 0x0204081020408000ULL,
    0x0408102040800000ULL, 0x0810204080000000ULL, 0x1020408000000000ULL, 0x2040800000000000ULL,
    0x0001020408102040ULL, 0x0102040810204080ULL, 0x0204081020408000ULL, 0x0408102040800000ULL,
    0x0810204080000000ULL, 0x1020408000000000ULL, 0x2040800000000000ULL, 0x4080000000000000ULL,
    0x0102040810204080ULL, 0x0204081020408000ULL, 0x0408102040800000ULL, 0x0810204080000000ULL,
    0x1020408000000000ULL, 0x2040800000000000ULL, 0x4080000000000000ULL, 0x8000000000000000ULL,
};

const uint64_t A1BB = 0x0000000000000001ULL;
const uint64_t B1BB = 0x0000000000000002ULL;
const uint64_t C1BB = 0x0000000000000004ULL;
const uint64_t D1BB = 0x0000000000000008ULL;
const uint64_t E1BB = 0x0000000000000010ULL;
const uint64_t F1BB = 0x0000000000000020ULL;
const uint64_t G1BB = 0x0000000000000040ULL;
const uint64_t H1BB = 0x0000000000000080ULL;
const uint64_t A2BB = 0x0000000000000100ULL;
const uint64_t B2BB = 0x0000000000000200ULL;
const uint64_t C2BB = 0x0000000000000400ULL;
const uint64_t D2BB = 0x0000000000000800ULL;
const uint64_t E2BB = 0x0000000000001000ULL;
const uint64_t F2BB = 0x0000000000002000ULL;
const uint64_t G2BB = 0x0000000000004000ULL;
const uint64_t H2BB = 0x0000000000008000ULL;
const uint64_t A3BB = 0x0000000000010000ULL;
const uint64_t B3BB = 0x0000000000020000ULL;
const uint64_t C3BB = 0x0000000000040000ULL;
const uint64_t D3BB = 0x0000000000080000ULL;
const uint64_t E3BB = 0x0000000000100000ULL;
const uint64_t F3BB = 0x0000000000200000ULL;
const uint64_t G3BB = 0x0000000000400000ULL;
const uint64_t H3BB = 0x0000000000800000ULL;
const uint64_t A4BB = 0x0000000001000000ULL;
const uint64_t B4BB = 0x0000000002000000ULL;
const uint64_t C4BB = 0x0000000004000000ULL;
const uint64_t D4BB = 0x0000000008000000ULL;
const uint64_t E4BB = 0x0000000010000000ULL;
const uint64_t F4BB = 0x0000000020000000ULL;
const uint64_t G4BB = 0x0000000040000000ULL;
const uint64_t H4BB = 0x0000000080000000ULL;
const uint64_t A5BB = 0x0000000100000000ULL;
const uint64_t B5BB = 0x0000000200000000ULL;
const uint64_t C5BB = 0x0000000400000000ULL;
const uint64_t D5BB = 0x0000000800000000ULL;
const uint64_t E5BB = 0x0000001000000000ULL;
const uint64_t F5BB = 0x0000002000000000ULL;
const uint64_t G5BB = 0x0000004000000000ULL;
const uint64_t H5BB = 0x0000008000000000ULL;
const uint64_t A6BB = 0x0000010000000000ULL;
const uint64_t B6BB = 0x0000020000000000ULL;
const uint64_t C6BB = 0x0000040000000000ULL;
const uint64_t D6BB = 0x0000080000000000ULL;
const uint64_t E6BB = 0x0000100000000000ULL;
const uint64_t F6BB = 0x0000200000000000ULL;
const uint64_t G6BB = 0x0000400000000000ULL;
const uint64_t H6BB = 0x0000800000000000ULL;
const uint64_t A7BB = 0x0001000000000000ULL;
const uint64_t B7BB = 0x0002000000000000ULL;
const uint64_t C7BB = 0x0004000000000000ULL;
const uint64_t D7BB = 0x0008000000000000ULL;
const uint64_t E7BB = 0x0010000000000000ULL;
const uint64_t F7BB = 0x0020000000000000ULL;
const uint64_t G7BB = 0x0040000000000000ULL;
const uint64_t H7BB = 0x0080000000000000ULL;
const uint64_t A8BB = 0x0100000000000000ULL;
const uint64_t B8BB = 0x0200000000000000ULL;
const uint64_t C8BB = 0x0400000000000000ULL;
const uint64_t D8BB = 0x0800000000000000ULL;
const uint64_t E8BB = 0x1000000000000000ULL;
const uint64_t F8BB = 0x2000000000000000ULL;
const uint64_t G8BB = 0x4000000000000000ULL;
const uint64_t H8BB = 0x8000000000000000ULL;

const uint64_t BitMask[64] = {
    A1BB, B1BB, C1BB, D1BB, E1BB, F1BB, G1BB, H1BB,
    A2BB, B2BB, C2BB, D2BB, E2BB, F2BB, G2BB, H2BB,
    A3BB, B3BB, C3BB, D3BB, E3BB, F3BB, G3BB, H3BB,
    A4BB, B4BB, C4BB, D4BB, E4BB, F4BB, G4BB, H4BB,
    A5BB, B5BB, C5BB, D5BB, E5BB, F5BB, G5BB, H5BB,
    A6BB, B6BB, C6BB, D6BB, E6BB, F6BB, G6BB, H6BB,
    A7BB, B7BB, C7BB, D7BB, E7BB, F7BB, G7BB, H7BB,
    A8BB, B8BB, C8BB, D8BB, E8BB, F8BB, G8BB, H8BB
};

const uint64_t FileABB = 0x0101010101010101ULL;
const uint64_t FileBBB = 0x0202020202020202ULL;
const uint64_t FileCBB = 0x0404040404040404ULL;
const uint64_t FileDBB = 0x0808080808080808ULL;
const uint64_t FileEBB = 0x1010101010101010ULL;
const uint64_t FileFBB = 0x2020202020202020ULL;
const uint64_t FileGBB = 0x4040404040404040ULL;
const uint64_t FileHBB = 0x8080808080808080ULL;

const uint64_t FileBB[8] = { FileABB, FileBBB, FileCBB,FileDBB, FileEBB, FileFBB,FileGBB, FileHBB };

const uint64_t Rank1BB = 0x00000000000000FFULL;
const uint64_t Rank2BB = 0x000000000000FF00ULL;
const uint64_t Rank3BB = 0x0000000000FF0000ULL;
const uint64_t Rank4BB = 0x00000000FF000000ULL;
const uint64_t Rank5BB = 0x000000FF00000000ULL;
const uint64_t Rank6BB = 0x0000FF0000000000ULL;
const uint64_t Rank7BB = 0x00FF000000000000ULL;
const uint64_t Rank8BB = 0xFF00000000000000ULL;

const uint64_t RankBB[8] = { Rank1BB, Rank2BB, Rank3BB, Rank4BB, Rank5BB,Rank6BB, Rank7BB, Rank8BB };

const uint64_t EmptyBoardBB = 0ULL;
const uint64_t FullBoardBB = 0xFFFFFFFFFFFFFFFFULL;

const uint64_t WhiteSquaresBB = 0x55AA55AA55AA55AAULL;
const uint64_t BlackSquaresBB = 0xAA55AA55AA55AA55ULL;

const uint64_t Rank8ByColorBB[2] = { Rank8BB, Rank1BB };
const uint64_t Rank7ByColorBB[2] = { Rank7BB, Rank2BB };
const uint64_t Rank4ByColorBB[2] = { Rank4BB, Rank5BB };
const uint64_t Rank3ByColorBB[2] = { Rank3BB, Rank6BB };
const uint64_t Rank2ByColorBB[2] = { Rank2BB, Rank7BB };
const uint64_t Rank1ByColorBB[2] = { Rank1BB, Rank8BB };
